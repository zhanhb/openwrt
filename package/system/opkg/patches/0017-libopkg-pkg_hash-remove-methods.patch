From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Huangbin Zhan <zhanhb88@gmail.com>
Date: Tue, 9 Nov 2021 16:12:32 +0800
Subject: [PATCH] libopkg: pkg_hash remove methods

Signed-off-by: Huangbin Zhan <zhanhb88@gmail.com>
---
 libopkg/pkg_depends.c | 130 ------------------------------------------
 libopkg/pkg_depends.h |   5 --
 libopkg/pkg_hash.c    |  11 ----
 3 files changed, 146 deletions(-)

--- a/libopkg/pkg_depends.c
+++ b/libopkg/pkg_depends.c
@@ -709,83 +709,6 @@ void parse_replacelist(pkg_t *pkg, char
 	pkg_set_ptr(pkg, PKG_REPLACES, replaces);
 }
 
-void buildProvides(abstract_pkg_t * ab_pkg, pkg_t * pkg)
-{
-#if 0
-	int i;
-
-	/* every pkg provides itself */
-	pkg->provides_count++;
-	abstract_pkg_vec_insert(ab_pkg->provided_by, ab_pkg);
-	pkg->provides = xcalloc(pkg->provides_count, sizeof(abstract_pkg_t *));
-	pkg->provides[0] = ab_pkg;
-	for (i = 1; i < pkg->provides_count; i++) {
-		abstract_pkg_t *provided_abpkg =
-		    ensure_abstract_pkg_by_name(pkg->provides_str[i - 1]);
-		free(pkg->provides_str[i - 1]);
-
-		pkg->provides[i] = provided_abpkg;
-
-		abstract_pkg_vec_insert(provided_abpkg->provided_by, ab_pkg);
-	}
-	if (pkg->provides_str)
-		free(pkg->provides_str);
-#endif
-}
-
-void buildConflicts(pkg_t * pkg)
-{
-	/*
-	int i;
-	compound_depend_t *conflicts, *conflict;
-
-	if (!pkg->conflicts_count)
-		return;
-
-	conflicts = pkg->conflicts =
-	    xcalloc(pkg->conflicts_count, sizeof(compound_depend_t));
-	for (i = 0; i < pkg->conflicts_count; i++) {
-		conflicts->type = CONFLICTS;
-		parseDepends(conflicts, pkg->conflicts_str[i]);
-		free(pkg->conflicts_str[i]);
-		conflicts++;
-	}
-	if (pkg->conflicts_str)
-		free(pkg->conflicts_str);
-		*/
-}
-
-void buildReplaces(abstract_pkg_t * ab_pkg, pkg_t * pkg)
-{
-#if 0
-	int i;
-
-	if (!pkg->replaces_count)
-		return;
-
-	pkg->replaces = xcalloc(pkg->replaces_count, sizeof(abstract_pkg_t *));
-
-	for (i = 0; i < pkg->replaces_count; i++) {
-		abstract_pkg_t *old_abpkg =
-		    ensure_abstract_pkg_by_name(pkg->replaces_str[i]);
-
-		pkg->replaces[i] = old_abpkg;
-		free(pkg->replaces_str[i]);
-
-		if (!old_abpkg->replaced_by)
-			old_abpkg->replaced_by = abstract_pkg_vec_alloc();
-		/* if a package pkg both replaces and conflicts old_abpkg,
-		 * then add it to the replaced_by vector so that old_abpkg
-		 * will be upgraded to ab_pkg automatically */
-		if (pkg_conflicts_abstract(pkg, old_abpkg))
-			abstract_pkg_vec_insert(old_abpkg->replaced_by, ab_pkg);
-	}
-
-	if (pkg->replaces_str)
-		free(pkg->replaces_str);
-#endif
-}
-
 void parse_deplist(pkg_t *pkg, enum depend_type type, char *list)
 {
 	int id, count;
@@ -828,59 +751,6 @@ void parse_deplist(pkg_t *pkg, enum depe
 	pkg_set_ptr(pkg, id, deps);
 }
 
-void buildDepends(pkg_t * pkg)
-{
-#if 0
-	unsigned int count;
-	int i;
-	compound_depend_t *depends;
-
-	if (!
-	    (count =
-	     pkg->pre_depends_count + pkg->depends_count +
-	     pkg->recommends_count + pkg->suggests_count))
-		return;
-
-	depends = pkg->depends = xcalloc(count, sizeof(compound_depend_t));
-
-	for (i = 0; i < pkg->pre_depends_count; i++) {
-		parseDepends(depends, pkg->pre_depends_str[i]);
-		free(pkg->pre_depends_str[i]);
-		depends->type = PREDEPEND;
-		depends++;
-	}
-	if (pkg->pre_depends_str)
-		free(pkg->pre_depends_str);
-
-	for (i = 0; i < pkg->depends_count; i++) {
-		parseDepends(depends, pkg->depends_str[i]);
-		free(pkg->depends_str[i]);
-		depends++;
-	}
-	if (pkg->depends_str)
-		free(pkg->depends_str);
-
-	for (i = 0; i < pkg->recommends_count; i++) {
-		parseDepends(depends, pkg->recommends_str[i]);
-		free(pkg->recommends_str[i]);
-		depends->type = RECOMMEND;
-		depends++;
-	}
-	if (pkg->recommends_str)
-		free(pkg->recommends_str);
-
-	for (i = 0; i < pkg->suggests_count; i++) {
-		parseDepends(depends, pkg->suggests_str[i]);
-		free(pkg->suggests_str[i]);
-		depends->type = SUGGEST;
-		depends++;
-	}
-	if (pkg->suggests_str)
-		free(pkg->suggests_str);
-
-#endif
-}
-
 const char *constraint_to_str(enum version_constraint c)
 {
 	switch (c) {
--- a/libopkg/pkg_depends.h
+++ b/libopkg/pkg_depends.h
@@ -56,11 +56,6 @@ struct compound_depend {
 };
 typedef struct compound_depend compound_depend_t;
 
-void buildProvides(abstract_pkg_t * ab_pkg, pkg_t * pkg);
-void buildConflicts(pkg_t * pkg);
-void buildReplaces(abstract_pkg_t * ab_pkg, pkg_t * pkg);
-void buildDepends(pkg_t * pkg);
-
 void parse_deplist(pkg_t *pkg, enum depend_type type, char *list);
 
 abstract_pkg_t **init_providelist(pkg_t *pkg, int *count);
--- a/libopkg/pkg_hash.c
+++ b/libopkg/pkg_hash.c
@@ -716,19 +716,8 @@ void hash_insert_pkg(pkg_t * pkg, int se
 		ab_pkg->state_status = SS_UNPACKED;
 	}
 
-	buildDepends(pkg);
-
-	buildProvides(ab_pkg, pkg);
-
 	init_providelist(pkg, NULL);
 
-	/* Need to build the conflicts graph before replaces for correct
-	 * calculation of replaced_by relation.
-	 */
-	buildConflicts(pkg);
-
-	buildReplaces(ab_pkg, pkg);
-
 	buildDependedUponBy(pkg, ab_pkg);
 
 	pkg_vec_insert_merge(ab_pkg->pkgs, pkg, set_status);
